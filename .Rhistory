library(dplyr)
library(ggplot2)
library(readr)
library(modelsummary)
install.packages("modelsummary")
install.packages("readr")
install.packages("readr")
if (!require("dplyr")) {install.packages("dplyr"); require("dplyr")}
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("readr")) {install.packages("readr"); require("readr")}
if (!require("modelsummary")) {install.packages("modelsummary"); require("modelsummary")}
if (!require("tidyr")) {install.packages("tidyr"); require("tidyr")}
if (!require("knitr")) {install.packages("knitr"); require("knitr")}
if (!require("easystats")) {install.packages("easystats"); require("easystats")}
if (!require("broom")) {install.packages("broom"); require("broom")}
if (!require("emmeans")) {install.packages("emmeans"); require("emmeans")}
if (!require("marginaleffects")) {install.packages("marginaleffects"); require("marginaleffects")}
if (!require("performance")) {install.packages("performance"); require("performance")}
if (!require("arm")) {install.packages("arm"); require("arm")}
if (!require("modelsummary")) {install.packages("modelsummary"); require("modelsummary")}
```{# load data}
```{# load data}
if (!require("dplyr")) {install.packages("dplyr"); require("dplyr")}
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("readr")) {install.packages("readr"); require("readr")}
if (!require("modelsummary")) {install.packages("modelsummary"); require("modelsummary")}
if (!require("tidyr")) {install.packages("tidyr"); require("tidyr")}
if (!require("knitr")) {install.packages("knitr"); require("knitr")}
if (!require("easystats")) {install.packages("easystats"); require("easystats")}
if (!require("broom")) {install.packages("broom"); require("broom")}
if (!require("emmeans")) {install.packages("emmeans"); require("emmeans")}
if (!require("marginaleffects")) {install.packages("marginaleffects"); require("marginaleffects")}
if (!require("performance")) {install.packages("performance"); require("performance")}
if (!require("arm")) {install.packages("arm"); require("arm")}
if (!require("modelsummary")) {install.packages("modelsummary"); require("modelsummary")}
getwd()
setwd(~/lab_assignment)
xsetwd("/Users/ca7443_1/Documents/GitHub/504_demo/lab_assignment")
```{# load data}
setwd("/Users/ca7443_1/Documents/GitHub/504_demo/lab_assignment")
```{# load data}
getwd()
```{# load data}
```{# load data}
```{# load data}
```{# load data}
```{# load data}
```{# load data}
```{# load data}
```{# load data}
data <- read_csv("gss2016.csv")
data <- read_csv("gss2016.csv")
View(data)
data <- data %>%
mutate(mass_trans_spend_right == "About right")
data <- data %>%
mutate(natmass == "About right")
data <- data %>%
mutate(natmass == "About right")
#Get proportions
mass_spend_summary <- data %>%
count(mass_trans_spend_right) %>%
mutate(proportion = n / sum(n))
mass_spend_summary <- data %>%
count(mass_trans_spend_right) %>%
mutate(proportion = n / sum(n))
data <- data %>%
mutate(mass_trans_spend_right == "About right")
data <- data %>%
mutate(mass_trans_spend_right = (natmass == "About right"))
#Get proportions
mass_spend_summary <- data %>%
count(natmass) %>%
mutate(proportion = n / sum(n))
#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.
#Change structure if neederd
mass_spend_long <- ______
View(mass_spend_summary)
#Get proportions
mass_spend_summary <- data %>%
count(natmass) %>%
mutate(proportion = n / sum(n))
#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.
#Change structure if needed
mass_spend_long <- melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "natmass")
#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.
#Change structure if needed
mass_spend_long <- melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "natmass"))
data <- read_csv("gss2016.csv")
View(data)
data <- data %>%
mutate(mass_trans_spend_right = (natmass == "About right"))
#Get proportions
mass_spend_summary <- data %>%
count(mass_trans_spend_right) %>%
mutate(proportion = n / sum(n))
#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.
#Change structure if needed
mass_spend_long <- melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "natmass"))
mass_spend_summary
View(mass_spend_summary)
mass_spend_long <- melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "mass_spend_long")
mass_spend_long <- dplyr::melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "mass_spend_long")
mass_spend_long
mass_spend_long <- reshpae2::melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "mass_spend_long")
mass_spend_long <- reshape2::melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "mass_spend_long")
#Get proportions
mass_spend_summary <- data %>%
count(mass_trans_spend_right) %>%
mutate(proportion = n / sum(n))
#Look at the dataframe structure. And make sure it's in a format that you can use for plotting.
#Change structure if needed
mass_spend_long <- reshape2::melt(mass_spend_summary(wide), id.vars = c("n","proportion"), variable.name = "mass_spend_long")
mass_spend_long <- pivot_longer(mass_spend_summary, names_to = "opinion", values_to = "proportion", cols = proportion)
mass_spend_long$mass_trans_spend_right <- as.factor(mass_spend_long$mass_trans_spend_right)
ggplot(mass_spend_long, aes(x = "", y = proportion, fill = factor(mass_trans_spend_right))) +
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = "", y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar())
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = "", y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
View(mass_spend_summary)
View(mass_spend_long)
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = "opinion", y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar(aes(fill = opinion))
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar(stat = "identity")
uniq(data$polviews)
unique(data$polviews)
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative")
ordered == TRUE))
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative"),
ordered == TRUE))
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative"),
ordered = TRUE))
mass_polviews_summary <- data %>%
count(polviews) %>%
mutate(proportion = n / sum(n))
mass_polviews_summary
mass_polviews_long <- pivot_longer(mass_polviews_summary, names_to = "opinion", values_to = "proportion", cols = proportion)
View(mass_polviews_long)
mass_polviews_long$mass_polviews_summary <- as.factor(mass_polviews_long$mass_polviews_summary)
#Factorise for plot
mass_polviews_long$polviews <- as.factor(mass_polviews_long$polviews)
ggplot(mass_polviews_long, aes(x = opinion, y = proportion, fill = factor(polviews))) +
geom_bar(stat = "identity")
intercept_only_model <- glm(
data = data,
family = binomial(link = "logit"),
binary ~ 1)
View(data)
data <- data %>%
mutate(age = if_else(age == "89 or older"),
age = as.numeric(age))
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews)))
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews))
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews))+
geom_hist()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_histogram()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_plot()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_bar()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right = factor(polviews))) +
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right, factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass, factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar()
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar(stat = "identity")
data <- data %>%
mutate(age = if_else(age == "89 or older", "89"),
age = as.numeric(age))
data <- data %>%
mutate(age = if_else(age == "89 or older", "89", "90"),
age = as.numeric(age))
data
data <- data %>%
mutate(age = if_else(age == "89 or older", "89", "age"),
age = as.numeric(age))
