#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = "", y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
View(mass_spend_summary)
View(mass_spend_long)
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = "opinion", y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar(aes(fill = opinion))
#Make plot
#Hint: geom_bar lets you make stacked bar charts
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar()
ggplot(mass_spend_long, aes(x = opinion, y = proportion, fill = factor(mass_trans_spend_right))) +
geom_bar(stat = "identity")
uniq(data$polviews)
unique(data$polviews)
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative")
ordered == TRUE))
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative"),
ordered == TRUE))
data <- data %>%
mutate(polviews = factor(polviews,
levels = c("Extrmly conservative",
"Conservative",
"Slightly conservative",
"Moderate",
"Slightly liberal",
"Liberal",
"Slghtly conservative"),
ordered = TRUE))
mass_polviews_summary <- data %>%
count(polviews) %>%
mutate(proportion = n / sum(n))
mass_polviews_summary
mass_polviews_long <- pivot_longer(mass_polviews_summary, names_to = "opinion", values_to = "proportion", cols = proportion)
View(mass_polviews_long)
mass_polviews_long$mass_polviews_summary <- as.factor(mass_polviews_long$mass_polviews_summary)
#Factorise for plot
mass_polviews_long$polviews <- as.factor(mass_polviews_long$polviews)
ggplot(mass_polviews_long, aes(x = opinion, y = proportion, fill = factor(polviews))) +
geom_bar(stat = "identity")
intercept_only_model <- glm(
data = data,
family = binomial(link = "logit"),
binary ~ 1)
View(data)
data <- data %>%
mutate(age = if_else(age == "89 or older"),
age = as.numeric(age))
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews)))
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews))
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews))+
geom_hist()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_histogram()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_plot()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews)) +
geom_bar()
#
ggplot(data, aes(x = mass_trans_spend_right, y = polviews, fill = factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right = factor(polviews))) +
#
ggplot(data, aes(x = polviews, y = mass_trans_spend_right, factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass, factor(polviews))) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar(stat = "identity")
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar()
#
ggplot(data, aes(x = polviews, y = natmass)) +
geom_bar(stat = "identity")
data <- data %>%
mutate(age = if_else(age == "89 or older", "89"),
age = as.numeric(age))
data <- data %>%
mutate(age = if_else(age == "89 or older", "89", "90"),
age = as.numeric(age))
data
data <- data %>%
mutate(age = if_else(age == "89 or older", "89", "age"),
age = as.numeric(age))
gbbo <- read_csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
gbbo <- read.csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
# Enter code to filter. Think about the data type that would be relevant for Rank
# gb <- ....
View(gbbo)
# Percentage of bakers in each rank
p <- ggplot(data, aes(Technical.Rank, Gender)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Technical.Ranks))
library(tidyverse)
library(broom)
library(performance)
library(ordinal) #clm
library(car) # anova
library(ggeffects) #  viz
library(gofcat) # brant
library(brms)
library(emmeans) # contrasts
library(knitr)
# Percentage of bakers in each rank
p <- ggplot(data, aes(Technical.Rank, Gender)) + geom_point()
p <- ggplot(data, aes(Technical.Rank, Gender)) + geom_point()
# Percentage of bakers in each rank
p <- ggplot(data, aes(Gender, Age)) + geom_point()
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Gender, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Technical.Ranks))
p <- ggplot(gbbo, aes(Technical.Ranks, Age)) + geom_point()
p
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Technical.Rank, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Technical.Rank))
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Age))
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Technical.Rank, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Age))
echnical.Rank, Gender)) + geom_point()
echnical.Rank, Gender)) + geom_point()
# Gender
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Technical.Rank, Gender)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(rows = vars(Gender))
p <- ggplot(gbbo, aes(Technical.Rank, Gender)) + geom_point()
# Gender
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Technical.Rank, Gender)) + geom_point()
p
# Percentage of bakers in each rank
p <- ggplot(gbbo, aes(Technical.Rank, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(cols = vars(Age))
gbbo <- read.csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
# Enter code to filter. Think about the data type that would be relevant for Rank
# gb <- ....
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo <- gbbo %>%
filter(Technical.Rank >= 3)
gbbo
# Enter code to filter. Think about the data type that would be relevant for Rank
filter(gbbo, Technical.Rank => 3)
gbbo <- read.csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo %>%
filter(Technical.Rank =< 3)
filter(Technical.Rank <= 3)
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo %>%
filter(Technical.Rank <= 3)
gbbo
View(gbbo)
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo %>% gbbo
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo %>%
filter(Technical.Rank <= 3)
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo_filter <- gbbo %>%
filter(Technical.Rank <= 3)
gbbo_filter
View(gbbo_filter)
# Percentage of bakers in each rank
p <- ggplot(gbbo_filter, aes(Technical.Rank, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
p + facet_grid(cols = vars(Age))
# Use vars() to supply variables from the dataset:
p + facet_grid(cols = vars(Technical.Rank))
# Gender
# Percentage of bakers in each rank
# Percentage of bakers in each rank
gbbo_gender <- ggplot(gbbo_filter, aes(Technical.Rank, Age)) + geom_point()
# Use vars() to supply variables from the dataset:
gbbo_gender + facet_grid(cols = vars(Technical.Rank))
# Gender
# Percentage of bakers in each rank
# Percentage of bakers in each rank
gbbo_gender <- ggplot(gbbo_filter, aes(Technical.Rank, Gender)) + geom_point()
# Use vars() to supply variables from the dataset:
gbbo_gender + facet_grid(cols = vars(Technical.Rank))
test_ord <- as.data.frame(lapply(gbbo_filter$Technical.Rank, as.ordered))
test_ord
View(test_ord)
gbbo <- read.csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo_filter <- gbbo %>%
filter(Technical.Rank <= 3)
# percentage of bakers in each rank
gbbo_gender <- df %>%
group_by(Gender, Technical.Rank) %>%
group_by(Gender) %>%
mutate(percentage = count / sum(count) * 100)
gbbo_gender <- df %>%
group_by(Gender, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(gender) %>%
mutate(percentage = count / sum(count) * 100)
# percentage of bakers in each rank
gbbo_gender <- df %>%
dplyr::group_by(Gender, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(gender) %>%
mutate(percentage = count / sum(count) * 100)
# percentage of bakers in each rank
gbbo_gender <- df %>%
dplyr::group_by(Gender, Technical.Rank) %>%
dplyr::summarise(count = n(), .groups = "drop") %>%
dplyr::group_by(gender) %>%
dplyr::mutate(percentage = count / sum(count) * 100)
# percentage of bakers in each rank
gbbo_gender <- gbbo_gender %>%
dplyr::group_by(Gender, Technical.Rank) %>%
dplyr::summarise(count = n(), .groups = "drop") %>%
dplyr::group_by(gender) %>%
dplyr::mutate(percentage = count / sum(count) * 100)
# percentage of bakers in each rank
gbbo_gender %>%
dplyr::group_by(Gender, Technical.Rank) %>%
dplyr::summarise(count = n(), .groups = "drop") %>%
dplyr::group_by(gender) %>%
dplyr::mutate(percentage = count / sum(count) * 100)
age_data <- gbbo_filter %>%
group_by(Age, Technical.rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Age) %>%
mutate(percentage = count / sum(count) * 100)
age_data <- gbbo_filter %>%
group_by(Age, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Age) %>%
mutate(percentage = count / sum(count) * 100)
age_plot <- ggplot(age_data, aes(x = Technical.rank, y = percentage, fill = as.factor(Age))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical Rank",
y = "Percentage",
fill = "Age Group")
age_plot
age_plot <- ggplot(age_data, aes(x = Technical.Rank, y = percentage, fill = as.factor(Age))) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical Rank",
y = "Percentage",
fill = "Age Group")
age_plot
as.ordered(gbbo_filter$)
as.ordered(gbbo_filter$Technical.Rank)
View(gbbo_filter)
gbbo_filter
ols_clm = MASS::polr(Rank~Gender*Age, data=gbbo_filter)
gbbo <- read.csv("https://raw.githubusercontent.com/suyoghc/PSY-504_Spring-2025/refs/heads/main/Ordinal%20Regression/data/GBBO.csv")
# Enter code to filter. Think about the data type that would be relevant for Rank
gbbo_filter <- gbbo %>%
filter(Technical.Rank <= 3)
gbbo_gender %>%
dplyr::group_by(Gender, Technical.Rank) %>%
dplyr::summarise(count = n(), .groups = "drop") %>%
dplyr::group_by(Gender) %>%
dplyr::mutate(percentage = count / sum(count) * 100)
gbbo_gender <- gbbo_filter %>%
group_by(Gender, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Gender) %>%
mutate(percentage = count / sum(count) * 100)
gbbo_gender_plot <- ggplot(gbbo_gender, aes(x = technical.rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage of Bakers by Rank and Gender",
x = "Technical Rank",
y = "Percentage") +
theme_minimal()
gbbo_gender_plot
gbbo_gender_plot
# Plot for Gender
gbbo_gender_plot <- ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Percentage of Bakers by Rank and Gender",
x = "Technical Rank",
y = "Percentage")
gbbo_gender_plot
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Gender",
x = "Technical Rank",
y = "Percentage")
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity") +
facet_grid(cols = vars(Technical.Rank))
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_dotplot(stat = "identity") +
facet_grid(cols = vars(Technical.Rank))
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_dotplot() +
facet_grid(cols = vars(Technical.Rank))
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
facet_grid(cols = vars(Technical.Rank))
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar()
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity") +
facet_grid(cols = vars(Gender))
# Plot for Gender
ggplot(gbbo_gender, aes(x = Technical.Rank, y = percentage, fill = Gender)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Gender",
x = "Technical Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Gender
# Compute percentage of bakers in each technical rank by age
gbbo_age <- gbbo_filter %>%
group_by(Age, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Age) %>%
mutate(percentage = count / sum(count) * 100)
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_dotplot(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar()
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar() +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_line(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_point(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Age",
y = "Percentage")
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_point(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_hist(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_plot(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_point(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
gbbo_filter$Technical.Rank <- factor(gbbo_filter$Technical.Rank, levels = c("1", "2", "3"), ordered = TRUE)
View(gbbo_filter)
str(gbbo_filter)
model <- polr(Technical.Rank ~ Gender + Age + Gender*Age, data = gbbo_filter)
gbbo_filter$Technical.Rank <- factor(gbbo_filter$Technical.Rank, levels = c("3", "2", "1"), ordered = TRUE)
m <- polr(Technical.Rank ~ Gender + Age + Gender*Age, data = gbbo_filter, Hess=TRUE)
m <- MASS::polr(Technical.Rank ~ Gender + Age + Gender*Age, data = gbbo_filter, Hess=TRUE)
## view a summary of the model
summary(m)
## view a summary of the model
m %>%
tidy()
## view a summary of the model
m %>%
tidy() %>%
kable()
## view a summary of the model
m %>%
tidy()
ols_clm = MASS::polr(Rank~Gender*Age, data=gbbo_filter)
ols_clm = MASS::polr(Technical.Rank~Gender*Age, data=gbbo_filter)
ggeffect(ols_clm, c("Age[all]", "Gender"), latent=TRUE) %>% plot()
brant.test(ols_clm)
#| results: hide
#|
ols2_brm = brm(Technical.Rank ~  Gender*Age, data=gbbo_filter, family = cumulative, cores = 4,chains = 4)
conditional_effects(ols2_brm, categorical = T)
```{r}
check_predictions(ols2_brm)
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar() +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "Technical.Rank",
y = "Percentage")
# Percentage of bakers in each rank (age)
gbbo_age <- gbbo_filter %>%
group_by(Age, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Age) %>%
mutate(percentage = count / sum(count) * 100)
gbbo_age
# Percentage of bakers in each rank (age)
gbbo_age <- gbbo_filter %>%
group_by(Age, Technical.Rank) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Technical.Rank) %>%
mutate(percentage = count / sum(count) * 100)
gbbo_age
# Plot for Age
ggplot(gbbo_age, aes(x = Technical.Rank, y = percentage, fill = Age)) +
geom_bar(stat = "identity") +
labs(title = "Percentage of Bakers by Rank and Age",
x = "TechnicalRank",
y = "Percentage")
str(ggbo_filter)
str(gbbo_filter)
m <- MASS::polr(Technical.Rank ~ Gender + Age + Gender*Age, data = gbbo_filter, Hess=TRUE)
## view a summary of the model
m %>%
tidy()
View(gbbo_gender)
View(gbbo_gender_plot)
